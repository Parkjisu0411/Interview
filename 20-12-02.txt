1.생성자란 무엇인가?
객체를 생성할때 항상실행되는것으로, 객체를 초기화해주기 위해 맨 처음 실행되는 메소드이다

2.디폴트 생성자란 무엇인가?
디폴트 생성자는 객체가 생성될 때 사용자가 초깃값을 명시하지 않으면, 컴파일러가 자동으로 제공하는 생성자입니다.
디폴트 생성자는 사용자로부터 인수를 전달받지 않으므로, 매개변수를 가지지 않습니다.
매개변수를 가지지 않으므로 대부분의 디폴트 생성자가 0이나 NULL, 빈 문자열 등으로 초기화를 진행.

3.생성자의 용도에 대하여 설명하시오.
생성자의 용도는 연산의 종류가 아니라 값을 초기화 하는 부분에 있다.

4.null 에 대하여 설명하시오.
객체에 null이 들어가 있으면 각체가 참조하는것과 관계를 끊으며
객체가 주소를 가지고있지 않다는것을 의미한다.


5.금일 프로그래밍 했던 문제
========================================
자바 클래스를 작성하는 연습을 해보자. 다음 main() 메소드를 실행하였을 때 예시와 같이 출력되도록 TV 클래스를 작성하라.

public static void main(String[] args) {
   TV myTV = new TV("LG", 2017, 32); //LG에서 만든 2017년 32인치
   myTV.show();
}
LG에서 만든 2017년형 32인치 TV

	public class Testmain {

	public static void main(String[] args) {
		
		TV myTV = new TV("LG", 2017, 32); // LG에서 만든 2017년 32인치
		myTV.show();
	}

}

	public class TV {
	String brand;
	int year;
	int inch;
	 
	TV(String brand, int year, int inch){
		this.brand = brand;
		this.year = year;
		this.inch = inch;
	}
	public void show() {
		System.out.println(brand + "에서 만든" + year + " 년형" + inch + "인치 TV");
	}
}



==========================================
		int math, science, english;
		math = 90;
		science = 100; 
		english = 80;
		
		Grade me = new Grade(math, science, english);
		System.out.println("평균은 " + me.average());


	public class Grade {
	int math;
	int science;
	int eng;
		
	public Grade(int math,int science,int eng) {
		this.math = math;
		this.science = science;
		this.eng = eng;
	}
	
		public double average(){
		return (math + science + eng) / 3.0;
		
	}

	
}


	import java.util.Scanner;

public class Grade1 {

	public static void main(String[] args) {
		
		Scanner scanner = null;
		
		while(true) {
		scanner = new Scanner(System.in);
		int math,science,eng;
		System.out.println("수학 과학 영어를 입력하세요");
		
		math = scanner.nextInt();
		science = scanner.nextInt();
		eng = scanner.nextInt();
		
	
		Grade me =new Grade(math,science,eng);
		System.out.println("평균은 " + me.average());
		
		System.out.println("계속 하시겠습니까");
		String yesOrno = scanner.next();
		if(yesOrno.equals("Y") ||yesOrno.equals("y"))
			continue;
		else
			break;
		}
		
		System.out.println("종료");
		scanner.close();
		
		
		
	}
}



============================================
노래 한 곡을 나타내는 Song 클래스를 작성하라. Song은 다음 필드로 구성된다.

- 노래의 제목을 나타내는 title
- 가수를 나타내는 artist
- 노래가 발표된 연도를 나타내는 year
- 국적을 나타내는 country

또한 Song 클래스에 다음 생성자와 메소드를 작성하라.
- 생성자 2개: 기본 생성자와 매개변수로 모든 필드를 초기화하는 생성자
- 노래 정보를 출력하는 show() 메소드
- main() 메소드에서는 1978년, 스웨덴 국적의 ABBA가 부른 "Dancing Queen"을
song 객체로 생성하고 show()를 이용하여 노래의 정보를 다음과 같이 출력하라.


public class Song {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		String title = "DancingQueen";
		String artist = "ABBA";
		String countrt = "스웨덴";
		int year = 1978;

		Song song = new Song1("Dancing Queen", "ABBA", 1978, "스웨덴");
		song.show();

	}
}




public class Song1 {
	String title;
	String artist;
	String country;
	int year;
	
	Song1(){}
	
	Song1(String title,String artist,String country,int year){
		this.title = title;
		this.artist = artist;
		this.country = country;
		this.year = year;
	}
	public void show() {
		System.out.println(year + "년 " + country + "국적의 "+ artist + "가 부른 " + title);
	}
}







===============================================
아래와 같이 성적을 연속적으로 입력 받고 평균을 내는  프로그램을 작성하시오.

국어 영어 수학을 입력하세요!
100 60 70
평균은 76.66666666666667
계속 하시겠습니까
y
국어 영어 수학을 입력하세요!
90 80 70
평균은 80.0
계속 하시겠습니까
n
프로그램 종료 입니다.



public class Grade {
	int math;
	int science;
	int eng;
		
	public Grade(int math,int science,int eng) {
		this.math = math;
		this.science = science;
		this.eng = eng;
	}
	
		public double average(){
		return (math + science + eng) / 3.0;
		
	}

	
}


	import java.util.Scanner;

public class Grade1 {

	public static void main(String[] args) {
		
		Scanner scanner = null;
		
		while(true) {
		scanner = new Scanner(System.in);
		int math,science,eng;
		System.out.println("수학 과학 영어를 입력하세요");
		
		math = scanner.nextInt();
		science = scanner.nextInt();
		eng = scanner.nextInt();
		
	
		Grade me =new Grade(math,science,eng);
		System.out.println("평균은 " + me.average());
		
		System.out.println("계속 하시겠습니까");
		String yesOrno = scanner.next();
		if(yesOrno.equals("Y") ||yesOrno.equals("y"))
			continue;
		else
			break;
		}
		
		System.out.println("종료");
		scanner.close();
		
		
		
	}
}
==============================================
6. 아래의 프로그램을 작성하시오.
 - 화폐 매수 구하기
 - 반드시 클래스로 작성할것 
출력
---------------------------------
136000
오만원 : 2장
만원 : 3장
오천원 : 1장
천원 : 1장
오백원 : 0개
백원 : 0개
계속 하시겠습니까
y
1456000
오만원 : 29장
만원 : 0장
오천원 : 1장
천원 : 1장
오백원 : 0개
백원 : 0개
계속 하시겠습니까

public class Money {

	int balance;
	
	Money(int balance){
		this.balance = balance;
	}
	public void moneyShow(int balance) {
		int count=0;
		for(int hwa=0;hwa<6;hwa++)
		{
			if(balance>=50000)
			{
				count = balance/50000;
				System.out.println("오만원권 : " + count);
				balance= balance -(count * 50000);
				count = 0;
				continue;
			}
			else if(balance>=10000)
			{
				count = balance/10000;
				System.out.println("만원권 : " + count);
				balance= balance -(count * 10000);
				count = 0;
				continue;
			}
			else if(balance>=5000)
			{
				count = balance/5000;
				System.out.println("오천원권 : " + count);
				balance= balance -(count * 5000);
				count = 0;
				continue;
			}
			else if(balance>=1000)
			{
				count = balance/1000;
				System.out.println("천원권 : " + count);
				balance= balance -(count * 1000);
				count = 0;
				continue;
			}
			else if(balance>=500)
			{
				count = balance/500;
				System.out.println("오백원권 : " + count);
				balance= balance -(count * 500);
				count = 0;
				continue;
			}
			else if(balance>=100)
			{
				count = balance/100;
				System.out.println("백원권 : " + count);
				balance= balance -(count * 100);
				count = 0;
				continue;
			}
		}
	}
}

7.자바의 명명 규칙에 대하여 설명하시오.
-클래스: 클래스 이름의 첫 문자는 대문자로시작,둘이상의 단어가 묶여서 하나의 이름을 이룰때 새로 시작하는 단어는 대문자

-메소드와 변수:메소드및 변수이름의 첫문자는 소문자로 시작한다,둘이상의 단어가 묶여서 하나의 이름을 이룰때
새로 시작하는 단어는 대문자로한다

-상수:상수의 이름은 모든문자를 대문자로 구성한다,둘이상의 단어가 묶여서 하나의 이름을 이룰때 
단어 사이로 언더바를 연결

-camel case:단어가 묶여서 하나의 이름이 될 때, 새로 시작하는 단어마다 대문자로 시작

-snake case:단어가 묶여서 하나의 이름이 될 때, 단어를 언더바(_)로 연결

