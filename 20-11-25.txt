1.키워드란 무엇인가?

	자바 프로그래밍에 사용하기 위해 미리 예약해놓은 명령어, 키워드는 변수로 선언할 수 없다.

2.2의 보수법이란?

	음수를 2진수로 표현하기 위해 사용하는 방법으로 2진수에서 1은 0으로, 0은 1로 바꾸고 1을 더한다.

3.컴퓨터에서 음의 정수 표현방법에 대하여 설명하시오.

	정수를 2의 보수법을 이용해 변경 후, 맨 앞에는 부호를 나타내는 숫자가 온다.

4.-5가 컴퓨터에서의 2진수 값을 나타내시오.

	5를 2진수로 나타내면 0101 이다. 2의 보수법을 이용하면 -5는 1011으로 나타낼 수 있다. 

5.실수에서 오차가 생기는 원인은 무엇인가?

	무한한 실수를 유한한 메모리에 표현하기 위해 근사값으로 나타내기 때문에 오차가 발생한다.

6.실수의 표현법은(고정소수법, 부동소수법)을 설명하시오.

	고정소수법은 소수점을 사용해 실수를 나타내는 방법이다.
	부동소수법은 가수와 지수를 이용해 실수를 나타내는 방법이다.
	ex) 0.12345를 부동소수법으로 나타내면 1.2345 X e-1 으로 가수는 2345이고 지수는 -1 이다.

7.정밀도란 무엇인가요?

	실수를 표현할 때 근사값을 얼마나 원래의 수와 가깝게 표현 가능한지 나타내는 정도.
	실수 형인 float과 double의 경우 double이 float보다 정밀도가 높다.

8.상수란 무엇이며 변수와의 차이는?

	상수는 변하지 않는 값으로 초기화 후에 값 변경이 불가능하다.
	자바에서는 final 로 상수를 선언할 수 있다.

9.초기화란 무엇인가?

	초기화란 상수 또는 변수에 처음 값을 등록하는 것이다.

10.리터럴이란 무엇인가요?

	

11.아래의 내용이 에러가 나는 이유와 수정방법은?
System.out.println(3147483647 + 3147483648);

	자바에서는 정수는 int형으로 인식하게 되는데 3147583648은 int형의 범위를 넘어선 값이기 때문에 에러가 난다.
	이를 수정하기 위해서 3147583648 뒤에 L을 붙이므로써 long형으로 인식하게 해준다.

12.자동 형변환과 명시적 형변환에 대하여 설명하시오.

	자동 형변환은 개발자가 따로 코드를 작성하지 않고 컴파일러가 자동으로 해주는 형변환이다.
	명시적 형변환이란 개발자가 강제로 하는 형 변환이다. 실수를 정수로 변환시에는 소수점 아래 수는 모두 버리게 되고 int를 short로 변환시키는 것과 같이 메모리수가 더 적은 형으로 변환 시에는 메모리가 버려지면서 이상한 값이 나올 수 있으므로 주의해야 한다.
	
13.아래의 에러가 나는 이유를 설명하고 수정하시오.
    	int a = 3;
    	int b = 4;
    	
    	double result = a / b;
    	
    	System.out.println(result);

	(에러가 나지는 않으나 원하는 결과값인 0.75가 아닌 0.0이 결과로 나오게 된다.)
	a와 b는 int형으로 연산 시 결과는 int로 나오게 된다. 
	따라서 3/4 = 0.75 인데 int로 나타내면서 소수점을 없애고 0이 결과값이 된다.
	double result = (double) a / b; 로 수정해 a를 double형으로 캐스팅 하므로써 결과값 또한 double형으로 나오게 해준다. 
	
14.이스퀘이프 시퀀스의 종료를 나열하고 기능을 설명하시오.

	\b : 백 스페이스
	\t : 탭
	\n : 개행
	\r : 리턴(맨 앞으로 이동)

15.아래의 출력결과를 확인하고, 130이 나오는 이유를 설명하시오.
System.out.println('A' + 'A');

	자바에서 int보다 적은 메모리를 갖는 값을 연산을 할 때에는 모두 int형으로 변환하여 연산하게 되기 때문이다.
	A는 int형으로 변환하게 되면 A의 아스키코드 값인 65로 디코딩 되어 계산하게 된다.